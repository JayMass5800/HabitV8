// Custom Gradle script to remove unwanted health permissions from AAB
// This addresses Google Play Console static analysis issues

// Use afterEvaluate to ensure Android plugin is configured
afterEvaluate {
    android.applicationVariants.configureEach { variant ->
        if (variant.buildType.name == 'release') {
            // Task to clean up manifest after build
            def cleanupTask = tasks.register("cleanup${variant.name.capitalize()}HealthPermissions") {
                doLast {
                    println "Cleaning up health permissions for ${variant.name}"
                    
                    // Find the merged manifest
                    def mergedManifest = file("${layout.buildDirectory.get()}/intermediates/merged_manifests/${variant.name}/AndroidManifest.xml")
                    if (mergedManifest.exists()) {
                        def manifestText = mergedManifest.text
                        
                        // List of permissions to remove (these trigger Google Play Console issues)
                        def permissionsToRemove = [
                            // KEEP these permissions - needed for our app
                            // These permissions are explicitly declared in AndroidManifest.xml and health_permissions.xml
                            // DO NOT add these to the removal list:
                            // 'android.permission.health.READ_HEART_RATE', 
                            // 'android.permission.health.READ_HEALTH_DATA_IN_BACKGROUND',
                            // 'android.permission.health.READ_STEPS',
                            // 'android.permission.health.READ_ACTIVE_CALORIES_BURNED',
                            // 'android.permission.health.READ_TOTAL_CALORIES_BURNED',
                            // 'android.permission.health.READ_SLEEP',
                            // 'android.permission.health.READ_HYDRATION',
                            // 'android.permission.health.READ_MINDFULNESS',
                            // 'android.permission.health.READ_WEIGHT',
                            // 'android.permission.ACTIVITY_RECOGNITION',
                            // 'com.google.android.gms.permission.ACTIVITY_RECOGNITION',
                            // 'android.permission.FOREGROUND_SERVICE',
                            // 'android.permission.FOREGROUND_SERVICE_HEALTH',
                            
                            // Remove all other health permissions
                            'android.permission.health.READ_BLOOD_PRESSURE',
                            'android.permission.health.READ_BLOOD_GLUCOSE',
                            'android.permission.health.READ_BODY_TEMPERATURE',
                            'android.permission.health.READ_OXYGEN_SATURATION',
                            'android.permission.health.READ_RESPIRATORY_RATE',
                            'android.permission.health.READ_NUTRITION',
                            'android.permission.health.READ_EXERCISE',
                            'android.permission.health.READ_DISTANCE',
                            'android.permission.health.READ_ELEVATION_GAINED',
                            'android.permission.health.READ_FLOORS_CLIMBED',
                            'android.permission.health.READ_POWER',
                            'android.permission.health.READ_SPEED',
                            'android.permission.health.READ_VO2_MAX',
                            'android.permission.health.READ_WHEELCHAIR_PUSHES',
                            'android.permission.health.READ_BASAL_METABOLIC_RATE',
                            'android.permission.health.READ_BODY_FAT',
                            'android.permission.health.READ_BONE_MASS',
                            'android.permission.health.READ_HEIGHT',
                            'android.permission.health.READ_HIP_CIRCUMFERENCE',
                            'android.permission.health.READ_LEAN_BODY_MASS',
                            'android.permission.health.READ_WAIST_CIRCUMFERENCE',
                            'android.permission.health.READ_MENSTRUATION',
                            'android.permission.health.READ_INTERMENSTRUAL_BLEEDING',
                            'android.permission.health.READ_OVULATION_TEST',
                            'android.permission.health.READ_CERVICAL_MUCUS',
                            'android.permission.health.READ_SEXUAL_ACTIVITY',
                            'android.permission.health.READ_RESTING_HEART_RATE',
                            'android.permission.health.READ_HEART_RATE_VARIABILITY',
                            'android.permission.health.READ_BODY_WATER_MASS',
                            'android.permission.health.READ_CERVICAL_POSITION',
                            'android.permission.health.READ_SKIN_TEMPERATURE'
                        ]
                        
                        // Remove unwanted permissions from manifest
                        def cleanedManifest = manifestText
                        permissionsToRemove.each { permission ->
                            // Safety check: never remove SCHEDULE_EXACT_ALARMS permission
                            if (permission != 'android.permission.SCHEDULE_EXACT_ALARMS') {
                                cleanedManifest = cleanedManifest.replaceAll(
                                    /<uses-permission\s+android:name="${permission}"\s*\/?>/, 
                                    ''
                                )
                            }
                        }
                        
                        // Write cleaned manifest back
                        mergedManifest.text = cleanedManifest
                        println "Removed ${permissionsToRemove.size()} unwanted health permissions from manifest"
                    }
                }
            }
            
            // Configure task dependencies
            tasks.named("process${variant.name.capitalize()}Manifest").configure {
                finalizedBy(cleanupTask)
            }
            
            tasks.matching { it.name.contains("bundle${variant.name.capitalize()}") }.configureEach {
                dependsOn(cleanupTask)
            }
        }
    }
}